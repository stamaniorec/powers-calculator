<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\P01_UART\P01_MyEmpty_UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\P01_UART\P01_MyEmpty_UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Fri Apr 22 22:35:33 2016
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; LCD_WriteString &rArr; LCD_WriteChar
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1dc7658]">Reset_Handler</a>
 <LI><a href="#[1dc78b0]">Undef_Handler</a>
 <LI><a href="#[1dc7874]">SWI_Handler</a>
 <LI><a href="#[1dc7838]">PAbt_Handler</a>
 <LI><a href="#[1dc77fc]">DAbt_Handler</a>
 <LI><a href="#[1dc77c0]">IRQ_Handler</a>
 <LI><a href="#[1dc7784]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1dc78b0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1dc78b0]">Undef_Handler</a><BR>
 <LI><a href="#[1dc7874]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1dc7874]">SWI_Handler</a><BR>
 <LI><a href="#[1dc7838]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1dc7838]">PAbt_Handler</a><BR>
 <LI><a href="#[1dc77fc]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1dc77fc]">DAbt_Handler</a><BR>
 <LI><a href="#[1dc77c0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1dc77c0]">IRQ_Handler</a><BR>
 <LI><a href="#[1dc7784]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1dc7784]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1dc7658]">Reset_Handler</a>
 <LI><a href="#[1dc78b0]">Undef_Handler</a>
 <LI><a href="#[1dc7874]">SWI_Handler</a>
 <LI><a href="#[1dc7838]">PAbt_Handler</a>
 <LI><a href="#[1dc77fc]">DAbt_Handler</a>
 <LI><a href="#[1dc77c0]">IRQ_Handler</a>
 <LI><a href="#[1dc7784]">FIQ_Handler</a>
 <LI><a href="#[1dc0d58]">__main</a>
 <LI><a href="#[1dc62a8]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1dc7658]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, sam7.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> sam7.o(RESET)
</UL>
<P><STRONG><a name="[1dc0d58]"></a>__main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[1dc0830]"></a>_main_stk</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1dc0740]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1dc0470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via Veneer)
</UL>

<P><STRONG><a name="[1dc0704]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1dc0470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload (via Veneer)
</UL>

<P><STRONG><a name="[1dc0614]"></a>_main_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[1dc6488]"></a>Delay</STRONG> (ARM, 12 bytes, Stack size 0 bytes, myempty_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc6488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc6488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[1dc644c]"></a>f_red</STRONG> (ARM, 8 bytes, Stack size 0 bytes, myempty_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[1dc6410]"></a>f_green</STRONG> (ARM, 8 bytes, Stack size 0 bytes, myempty_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[1dc63d4]"></a>f_blue</STRONG> (ARM, 8 bytes, Stack size 0 bytes, myempty_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[1dc6398]"></a>f_yellow</STRONG> (ARM, 8 bytes, Stack size 0 bytes, myempty_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[1dc635c]"></a>UART_PutChar</STRONG> (ARM, 44 bytes, Stack size 16 bytes, myempty_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc6014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_TxReady
<LI><a href="#[1dc608c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc6320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteString
</UL>

<P><STRONG><a name="[1dc6320]"></a>UART_WriteString</STRONG> (ARM, 72 bytes, Stack size 16 bytes, myempty_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WriteString &rArr; UART_PutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc095c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[1dc635c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc62e4]"></a>UART_ReadString</STRONG> (ARM, 156 bytes, Stack size 32 bytes, myempty_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_ReadString
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc6050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_RxReady
<LI><a href="#[1dc60c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_GetChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc62a8]"></a>main</STRONG> (ARM, 160 bytes, Stack size 40 bytes, myempty_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; LCD_WriteString &rArr; LCD_WriteChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc5f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteString
<LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
<LI><a href="#[1dc5f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
<LI><a href="#[1dc6104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_EnableTx
<LI><a href="#[1dc6140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_EnableRx
<LI><a href="#[1dc617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_Configure
<LI><a href="#[1dc61b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US1_CfgPMC
<LI><a href="#[1dc61f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US1_CfgPIO
<LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
<LI><a href="#[1dc626c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_LowLevel_Init
<LI><a href="#[1dc62e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadString
<LI><a href="#[1dc6320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[1dc56f0]"></a>AT91F_PMC_CfgSysClkEnableRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc56b4]"></a>AT91F_PMC_CfgSysClkDisableRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5678]"></a>AT91F_PMC_GetSysClkStatusRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc6230]"></a>AT91F_PMC_EnablePeripheralClock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc0e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_Init
<LI><a href="#[1dc0efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI0_CfgPMC
<LI><a href="#[1dc0f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI1_CfgPMC
<LI><a href="#[1dc185c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PIOB_CfgPMC
<LI><a href="#[1dc1898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PIOA_CfgPMC
<LI><a href="#[1dc473c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US0_CfgPMC
<LI><a href="#[1dc61b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US1_CfgPMC
<LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc563c]"></a>AT91F_PMC_DisablePeripheralClock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5600]"></a>AT91F_PMC_GetPeripheralClock</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc55c4]"></a>AT91F_CKGR_CfgMainOscillatorRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5588]"></a>AT91F_CKGR_GetMainOscillatorRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc554c]"></a>AT91F_CKGR_EnableMainOscillator</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5510]"></a>AT91F_CKGR_DisableMainOscillator</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc54d4]"></a>AT91F_CKGR_CfgMainOscStartUpTime</STRONG> (ARM, 52 bytes, Stack size 8 bytes, lib_at91sam7_pmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc0a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>

<P><STRONG><a name="[1dc5498]"></a>AT91F_CKGR_GetMainClockFreqRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc545c]"></a>AT91F_CKGR_GetMainClock</STRONG> (ARM, 24 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5420]"></a>AT91F_PMC_CfgMCKRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc53e4]"></a>AT91F_PMC_GetMCKRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc53a8]"></a>AT91F_PMC_GetMasterClock</STRONG> (ARM, 148 bytes, Stack size 16 bytes, lib_at91sam7_pmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc0a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>

<P><STRONG><a name="[1dc536c]"></a>AT91F_PMC_EnablePCK</STRONG> (ARM, 28 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5330]"></a>AT91F_PMC_DisablePCK</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc52f4]"></a>AT91F_PMC_EnableInterrupt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc52b8]"></a>AT91F_PMC_DisableInterrupt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc527c]"></a>AT91F_PMC_GetStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5240]"></a>AT91F_PMC_GetInterruptMaskStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5204]"></a>AT91F_PMC_IsInterruptMasked</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc51c8]"></a>AT91F_PMC_IsStatusSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc518c]"></a>AT91F_CKGR_CfgPLLRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5150]"></a>AT91F_CKGR_GetPLLRegister</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc5114]"></a>AT91F_PMC_CfgPMC</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text), UNUSED)

<P><STRONG><a name="[1dc50d8]"></a>AT91F_PMC_CfgPIO</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lib_at91sam7_pmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PIO_CfgPeripheral
</UL>

<P><STRONG><a name="[1dc509c]"></a>AT91F_PMC_GetPeripheralAddress</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc626c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_LowLevel_Init
</UL>

<P><STRONG><a name="[1dc4a84]"></a>AT91F_US_Baudrate</STRONG> (ARM, 44 bytes, Stack size 8 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AT91F_US_Baudrate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc0a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc4a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_SetBaudrate
<LI><a href="#[1dc617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_Configure
</UL>

<P><STRONG><a name="[1dc4a48]"></a>AT91F_US_SetBaudrate</STRONG> (ARM, 32 bytes, Stack size 8 bytes, lib_at91sam7_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc4a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_Baudrate
</UL>

<P><STRONG><a name="[1dc4a0c]"></a>AT91F_US_SetTimeguard</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc49d0]"></a>AT91F_US_EnableInterrupt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc4994]"></a>AT91F_US_DisableInterrupt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc617c]"></a>AT91F_US_Configure</STRONG> (ARM, 72 bytes, Stack size 16 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AT91F_US_Configure &rArr; AT91F_US_Baudrate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc4610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_Open
<LI><a href="#[1dc4a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_Baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc6140]"></a>AT91F_US_EnableRx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc6104]"></a>AT91F_US_EnableTx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc4958]"></a>AT91F_US_ResetRx</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc491c]"></a>AT91F_US_ResetTx</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc48e0]"></a>AT91F_US_DisableRx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc48a4]"></a>AT91F_US_DisableTx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc4868]"></a>AT91F_US_Close</STRONG> (ARM, 56 bytes, Stack size 8 bytes, lib_at91sam7_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc464c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_Close
</UL>

<P><STRONG><a name="[1dc6014]"></a>AT91F_US_TxReady</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc635c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>

<P><STRONG><a name="[1dc6050]"></a>AT91F_US_RxReady</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc62e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadString
</UL>

<P><STRONG><a name="[1dc482c]"></a>AT91F_US_Error</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc608c]"></a>AT91F_US_PutChar</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc635c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutChar
</UL>

<P><STRONG><a name="[1dc60c8]"></a>AT91F_US_GetChar</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc62e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadString
</UL>

<P><STRONG><a name="[1dc47f0]"></a>AT91F_US_SendFrame</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lib_at91sam7_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc4598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_SendFrame
</UL>

<P><STRONG><a name="[1dc47b4]"></a>AT91F_US_ReceiveFrame</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lib_at91sam7_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc45d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_ReceiveFrame
</UL>

<P><STRONG><a name="[1dc4778]"></a>AT91F_US_SetIrdaFilter</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc61b8]"></a>AT91F_US1_CfgPMC</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc61f4]"></a>AT91F_US1_CfgPIO</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lib_at91sam7_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AT91F_US1_CfgPIO
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc5060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PIO_CfgPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc473c]"></a>AT91F_US0_CfgPMC</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
</UL>

<P><STRONG><a name="[1dc4700]"></a>AT91F_US0_CfgPIO</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PIO_CfgPeripheral
</UL>

<P><STRONG><a name="[1dc46c4]"></a>AT91F_USART_PDC_GetPeripheralAddress</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc4688]"></a>AT91F_USART_GetChannelAddress</STRONG> (ARM, 28 bytes, Stack size 0 bytes, lib_at91sam7_usart.o(.text), UNUSED)

<P><STRONG><a name="[1dc626c]"></a>AT91F_LowLevel_Init</STRONG> (ARM, 96 bytes, Stack size 8 bytes, lowlevelinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AT91F_LowLevel_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc509c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_GetPeripheralAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc3f44]"></a>AT91F_Finalize_Init</STRONG> (ARM, 24 bytes, Stack size 0 bytes, lowlevelinit.o(.text), UNUSED)

<P><STRONG><a name="[1dc30bc]"></a>Delaya</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lcd_ge8.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc30bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delaya
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc30bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delaya
</UL>

<P><STRONG><a name="[1dc3080]"></a>Delay_</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lcd_ge8.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc3080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc3080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_
</UL>

<P><STRONG><a name="[1dc3044]"></a>WriteSpiData</STRONG> (ARM, 32 bytes, Stack size 0 bytes, lcd_ge8.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc2ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetRect
<LI><a href="#[1dc2f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetPixel
<LI><a href="#[1dc2f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDShowImage130x130
<LI><a href="#[1dc5f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
</UL>

<P><STRONG><a name="[1dc3008]"></a>WriteSpiCommand</STRONG> (ARM, 32 bytes, Stack size 0 bytes, lcd_ge8.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc2ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetRect
<LI><a href="#[1dc2f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetPixel
<LI><a href="#[1dc2f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDShowImage130x130
<LI><a href="#[1dc5f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
</UL>

<P><STRONG><a name="[1dc5f9c]"></a>InitLCD</STRONG> (ARM, 396 bytes, Stack size 4 bytes, lcd_ge8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InitLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc3008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiCommand
<LI><a href="#[1dc3044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiData
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc2fcc]"></a>Backlight</STRONG> (ARM, 28 bytes, Stack size 0 bytes, lcd_ge8.o(.text), UNUSED)

<P><STRONG><a name="[1dc2f90]"></a>SetContrast</STRONG> (ARM, 4 bytes, Stack size 0 bytes, lcd_ge8.o(.text), UNUSED)

<P><STRONG><a name="[1dc2f54]"></a>LCDShowImage130x130</STRONG> (ARM, 140 bytes, Stack size 8 bytes, lcd_ge8.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc3008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiCommand
<LI><a href="#[1dc3044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiData
</UL>

<P><STRONG><a name="[1dc5f60]"></a>LCD_ClearScreen</STRONG> (ARM, 232 bytes, Stack size 32 bytes, lcd_ge8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_ClearScreen
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc2d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_WriteData
<LI><a href="#[1dc2db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_WriteCommand
<LI><a href="#[1dc2dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_GetPeripheralAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1dc6398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_yellow
<LI><a href="#[1dc63d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_blue
<LI><a href="#[1dc6410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_green
<LI><a href="#[1dc644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_red
</UL>

<P><STRONG><a name="[1dc2f18]"></a>LCDSetPixel</STRONG> (ARM, 116 bytes, Stack size 8 bytes, lcd_ge8.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc3008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiCommand
<LI><a href="#[1dc3044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiData
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc2e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCircle
<LI><a href="#[1dc2edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetLine
</UL>

<P><STRONG><a name="[1dc2edc]"></a>LCDSetLine</STRONG> (ARM, 200 bytes, Stack size 36 bytes, lcd_ge8.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc2f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc2ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetRect
</UL>

<P><STRONG><a name="[1dc2ea0]"></a>LCDSetRect</STRONG> (ARM, 328 bytes, Stack size 32 bytes, lcd_ge8.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc2edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetLine
<LI><a href="#[1dc3008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiCommand
<LI><a href="#[1dc3044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpiData
</UL>

<P><STRONG><a name="[1dc2e64]"></a>LCDSetCircle</STRONG> (ARM, 316 bytes, Stack size 68 bytes, lcd_ge8.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc2f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetPixel
</UL>

<P><STRONG><a name="[1dc2e28]"></a>LCD_WriteChar</STRONG> (ARM, 392 bytes, Stack size 64 bytes, lcd_ge8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_WriteChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc2d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_WriteData
<LI><a href="#[1dc2db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_WriteCommand
<LI><a href="#[1dc2dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_GetPeripheralAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc5f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteString
</UL>

<P><STRONG><a name="[1dc5f24]"></a>LCD_WriteString</STRONG> (ARM, 92 bytes, Stack size 40 bytes, lcd_ge8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_WriteString &rArr; LCD_WriteChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc2e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc62a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc29b4]"></a>AT91F_PDC_SetNextRx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc2978]"></a>AT91F_PDC_SetNextTx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc293c]"></a>AT91F_PDC_SetRx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc2900]"></a>AT91F_PDC_SetTx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc28c4]"></a>AT91F_PDC_EnableTx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc2888]"></a>AT91F_PDC_EnableRx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc284c]"></a>AT91F_PDC_DisableTx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc2810]"></a>AT91F_PDC_DisableRx</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)

<P><STRONG><a name="[1dc27d4]"></a>AT91F_PDC_IsTxEmpty</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1dc4598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_SendFrame
</UL>

<P><STRONG><a name="[1dc2798]"></a>AT91F_PDC_IsNextTxEmpty</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1dc4598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_SendFrame
</UL>

<P><STRONG><a name="[1dc275c]"></a>AT91F_PDC_IsRxEmpty</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1dc45d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_ReceiveFrame
</UL>

<P><STRONG><a name="[1dc2720]"></a>AT91F_PDC_IsNextRxEmpty</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1dc45d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_ReceiveFrame
</UL>

<P><STRONG><a name="[1dc4610]"></a>AT91F_PDC_Open</STRONG> (ARM, 72 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc0e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_Init
<LI><a href="#[1dc617c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_Configure
</UL>

<P><STRONG><a name="[1dc464c]"></a>AT91F_PDC_Close</STRONG> (ARM, 56 bytes, Stack size 0 bytes, lib_at91sam7_pdc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1dc1118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_Close
<LI><a href="#[1dc4868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_Close
</UL>

<P><STRONG><a name="[1dc4598]"></a>AT91F_PDC_SendFrame</STRONG> (ARM, 76 bytes, Stack size 8 bytes, lib_at91sam7_pdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc2798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_IsNextTxEmpty
<LI><a href="#[1dc27d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_IsTxEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc1154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_SendFrame
<LI><a href="#[1dc47f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_SendFrame
</UL>

<P><STRONG><a name="[1dc45d4]"></a>AT91F_PDC_ReceiveFrame</STRONG> (ARM, 76 bytes, Stack size 8 bytes, lib_at91sam7_pdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc2720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_IsNextRxEmpty
<LI><a href="#[1dc275c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_IsRxEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc1190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_ReceiveFrame
<LI><a href="#[1dc47b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_ReceiveFrame
</UL>

<P><STRONG><a name="[1dc5060]"></a>AT91F_PIO_CfgPeripheral</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc0ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI0_CfgPIO
<LI><a href="#[1dc0f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI1_CfgPIO
<LI><a href="#[1dc4700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US0_CfgPIO
<LI><a href="#[1dc50d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_CfgPIO
<LI><a href="#[1dc61f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US1_CfgPIO
</UL>

<P><STRONG><a name="[1dc2360]"></a>AT91F_PIO_CfgOutput</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2324]"></a>AT91F_PIO_CfgInput</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc22e8]"></a>AT91F_PIO_CfgOpenDrain</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc22ac]"></a>AT91F_PIO_CfgPullup</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2270]"></a>AT91F_PIO_DisablePullup</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2234]"></a>AT91F_PIO_CfgDirectDrive</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc21f8]"></a>AT91F_PIO_CfgInputFilter</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc21bc]"></a>AT91F_PIO_GetInput</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2180]"></a>AT91F_PIO_IsInputSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2144]"></a>AT91F_PIO_SetOutput</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2108]"></a>AT91F_PIO_ClearOutput</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc20cc]"></a>AT91F_PIO_ForceOutput</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2090]"></a>AT91F_PIO_Enable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2054]"></a>AT91F_PIO_Disable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc2018]"></a>AT91F_PIO_GetStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1fdc]"></a>AT91F_PIO_IsSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1fa0]"></a>AT91F_PIO_OutputEnable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1f64]"></a>AT91F_PIO_OutputDisable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1f28]"></a>AT91F_PIO_GetOutputStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1eec]"></a>AT91F_PIO_IsOutputSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1eb0]"></a>AT91F_PIO_InputFilterEnable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1e74]"></a>AT91F_PIO_InputFilterDisable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1e38]"></a>AT91F_PIO_GetInputFilterStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1dfc]"></a>AT91F_PIO_IsInputFilterSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1dc0]"></a>AT91F_PIO_GetOutputDataStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1d84]"></a>AT91F_PIO_InterruptEnable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1d48]"></a>AT91F_PIO_InterruptDisable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1d0c]"></a>AT91F_PIO_GetInterruptMaskStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1cd0]"></a>AT91F_PIO_GetInterruptStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1c94]"></a>AT91F_PIO_IsInterruptMasked</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1c58]"></a>AT91F_PIO_IsInterruptSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1c1c]"></a>AT91F_PIO_MultiDriverEnable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1be0]"></a>AT91F_PIO_MultiDriverDisable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1ba4]"></a>AT91F_PIO_GetMultiDriverStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1b68]"></a>AT91F_PIO_IsMultiDriverSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1b2c]"></a>AT91F_PIO_A_RegisterSelection</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1af0]"></a>AT91F_PIO_B_RegisterSelection</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1ab4]"></a>AT91F_PIO_Get_AB_RegisterStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1a78]"></a>AT91F_PIO_IsAB_RegisterSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1a3c]"></a>AT91F_PIO_OutputWriteEnable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1a00]"></a>AT91F_PIO_OutputWriteDisable</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc19c4]"></a>AT91F_PIO_GetOutputWriteStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1988]"></a>AT91F_PIO_IsOutputWriteSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc194c]"></a>AT91F_PIO_GetCfgPullup</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1910]"></a>AT91F_PIO_IsOutputDataStatusSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc18d4]"></a>AT91F_PIO_IsCfgPullupStatusSet</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1898]"></a>AT91F_PIOA_CfgPMC</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
</UL>

<P><STRONG><a name="[1dc185c]"></a>AT91F_PIOB_CfgPMC</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
</UL>

<P><STRONG><a name="[1dc1820]"></a>AT91F_PIO_GetPeripheralAddress</STRONG> (ARM, 28 bytes, Stack size 0 bytes, lib_at91sam7_pio.o(.text), UNUSED)

<P><STRONG><a name="[1dc1370]"></a>AT91F_SPI_CfgCs</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc1334]"></a>AT91F_SPI_EnableInterrupt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc12f8]"></a>AT91F_SPI_DisableInterrupt</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc12bc]"></a>AT91F_SPI_Reset</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc1280]"></a>AT91F_SPI_Enable</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc1244]"></a>AT91F_SPI_Disable</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc1208]"></a>AT91F_SPI_CfgMode</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc11cc]"></a>AT91F_SPI_CfgPCS</STRONG> (ARM, 36 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc1190]"></a>AT91F_SPI_ReceiveFrame</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc45d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_ReceiveFrame
</UL>

<P><STRONG><a name="[1dc1154]"></a>AT91F_SPI_SendFrame</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc4598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_SendFrame
</UL>

<P><STRONG><a name="[1dc1118]"></a>AT91F_SPI_Close</STRONG> (ARM, 64 bytes, Stack size 8 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc464c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_Close
</UL>

<P><STRONG><a name="[1dc10dc]"></a>AT91F_SPI_PutChar</STRONG> (ARM, 36 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc2d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_WriteData
<LI><a href="#[1dc2db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_WriteCommand
</UL>

<P><STRONG><a name="[1dc10a0]"></a>AT91F_SPI_GetChar</STRONG> (ARM, 16 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc1064]"></a>AT91F_SPI_GetInterruptMaskStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc1028]"></a>AT91F_SPI_IsInterruptMasked</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc0fec]"></a>AT91F_SPI_GetStatus</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc0fb0]"></a>AT91F_SPI_IsStatusMasked</STRONG> (ARM, 12 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc0f74]"></a>AT91F_SPI1_CfgPMC</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
</UL>

<P><STRONG><a name="[1dc0f38]"></a>AT91F_SPI1_CfgPIO</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PIO_CfgPeripheral
</UL>

<P><STRONG><a name="[1dc0efc]"></a>AT91F_SPI0_CfgPMC</STRONG> (ARM, 8 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
</UL>

<P><STRONG><a name="[1dc0ec0]"></a>AT91F_SPI0_CfgPIO</STRONG> (ARM, 40 bytes, Stack size 8 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc5060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PIO_CfgPeripheral
</UL>

<P><STRONG><a name="[1dc2db0]"></a>AT91F_SPI_WriteCommand</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dc10dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc2e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteChar
<LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[1dc2d74]"></a>AT91F_SPI_WriteData</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dc10dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc2e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteChar
<LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[1dc0e84]"></a>AT91F_SPI_ReadData</STRONG> (ARM, 96 bytes, Stack size 4 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc2dec]"></a>AT91F_SPI_GetPeripheralAddress</STRONG> (ARM, 28 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc0e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_Init
<LI><a href="#[1dc2e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteChar
<LI><a href="#[1dc5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearScreen
</UL>

<P><STRONG><a name="[1dc0e48]"></a>AT91F_SPI_Init</STRONG> (ARM, 96 bytes, Stack size 16 bytes, lib_at91sam7_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc2dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_SPI_GetPeripheralAddress
<LI><a href="#[1dc4610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PDC_Open
<LI><a href="#[1dc6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_EnablePeripheralClock
</UL>

<P><STRONG><a name="[1dc0e0c]"></a>AT91F_SPI_PDC_GetPeripheralAddress</STRONG> (ARM, 28 bytes, Stack size 0 bytes, lib_at91sam7_spi.o(.text), UNUSED)

<P><STRONG><a name="[1dc0a88]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1dc0a4c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc4a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_US_Baudrate (via Veneer)
<LI><a href="#[1dc53a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_PMC_GetMasterClock (via Veneer)
<LI><a href="#[1dc54d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT91F_CKGR_CfgMainOscStartUpTime (via Veneer)
</UL>

<P><STRONG><a name="[1dc095c]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1dc6320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteString (via Veneer)
</UL>

<P><STRONG><a name="[1dc0470]"></a>__scatterload</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dc03f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_call_via_r3
<LI><a href="#[1dc0704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc0740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload (via Veneer)
</UL>

<P><STRONG><a name="[1dc0434]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1dc03f8]"></a>__ARM_common_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init.o(i.__ARM_common_call_via_r3))
<BR><BR>[Called By]<UL><LI><a href="#[1dc0470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1dc0074]"></a>__scatterload_copy</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc0074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc0074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[1dc0038]"></a>__scatterload_null</STRONG> (ARM, 4 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1dbfffc]"></a>__scatterload_zeroinit</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1dc78b0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, sam7.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1dc78b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc78b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sam7.o(RESET)
</UL>
<P><STRONG><a name="[1dc7874]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, sam7.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1dc7874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc7874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sam7.o(RESET)
</UL>
<P><STRONG><a name="[1dc7838]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, sam7.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1dc7838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc7838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sam7.o(RESET)
</UL>
<P><STRONG><a name="[1dc77fc]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, sam7.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1dc77fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc77fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sam7.o(RESET)
</UL>
<P><STRONG><a name="[1dc77c0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, sam7.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1dc77c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc77c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sam7.o(RESET)
</UL>
<P><STRONG><a name="[1dc7784]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, sam7.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1dc7784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc7784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sam7.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
